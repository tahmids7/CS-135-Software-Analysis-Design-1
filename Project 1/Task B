//Name: Tahmid Sahan
//Date: 3/1/23
//Course: CS-135
//Instructor: Genady Maryash
//Rec Instructor: Enxhi Osmanllari
//Assignment: Project 1 Task B: Dictionary Operations

// This program acts like a dictionary, where it saves the word, part of speech and definiiton into arrays, and be able to display all of that information. 


#include <iostream>
#include <fstream>
#include <string>
using namespace std;

const int g_MAX_WORDS = 1000;
int g_word_count = 0;

string g_words[g_MAX_WORDS];
string g_definitions[g_MAX_WORDS];
string g_pos[g_MAX_WORDS];


int getIndex(string word)
{
  int a;
  for(a=0; a<g_word_count; a++)
  {
    if (word == g_words[a])
    {
      return a;
    }
  }
  return -1;
}

string getDefinition(string word)
{
  int b;
  for (b=0; b<g_word_count; b++)
  {
    if (g_words[b]==word)
    {
      return g_definitions[b];
    }
  }
  return "NOT_FOUND";
}

string getPOS(string word)
{
  int c;
  for (c=0; c<g_word_count; c++)
  {
    if (g_words[c]==word)
    {
      return g_pos[c];
    }
  }
  return "NOT_FOUND";
}

int countPrefix(string prefix)
{
  string a = prefix;
  int starter = 0;
  int d;
  for (d=0; d<g_word_count; d++)
  {
    if (g_words[d].substr(0,a.length()) == prefix)
    {
      starter+=1;
    }
  }
  return starter;
}

void readWords(string filename) 
{
ifstream fin(filename);
if (fin.fail()) {
    cerr << "File can't be opened for reading." <<endl;
    exit(1); 
}

string word;
string definition;
string partofspeech; 
string col;

while(fin >> word >> partofspeech >> col ) 
 { 
    g_words[g_word_count]=word;
    g_pos[g_word_count]=partofspeech;
    getline(fin,definition);
    g_definitions[g_word_count]=definition.substr(1);
    g_word_count+=1;
    }

}
